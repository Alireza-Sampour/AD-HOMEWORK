توسعه/وراثت (Extend/Inheritance):
وراثت یکی از پرکاربردترین ویژگی‌های SASS است. با به کارگیری این ویژگی می‌توان گروهی از خصوصیت‌های یک selector را در selector دیگری به اشتراک گذاشت تا نوشتن کدهای تکراری جلوگیری شود. (پیاده‌سازی اصل DRY)
 


در کد بالا، ویژگی‌های نوشته شده برای message. در کلاس‌های success ،.error.  و warning. به وسیله دستور extend@ به ارث برده شده‌اند.
 


5-وراثت یا extend
این هم یکی از ویژگی های مهم و مفید sass هست اما این و اخر همه گفتم که بیشتر هیجان زده بشینlaugh این ویژگی به ما این اجازه و میده تا محتوای یک کلاس و داخل یه کلاس دیگه استفاده کنیم. فرض کنید بخواهیم یه جفت دکمه با پس زمینه های متفاوت داشته باشیم مثلا یه دکمه decline و accept. از اونجایی که هر دوتا دکمه از نظر ظاهری شبیه هم هستند پس یکسری استایل های مشابه دارند و ما می تونیم که استایل های مشابه را به اشتراک بگذاریم با استفاده از sass این کار به راحتی انجام میشه به این صورت که پیش فرضی که برای دکمه های یکی هست و به وراثت می گذاریم یعنی هر دو دکمه این استایل ها رو به ارث می برند.
.button {
 background: rgba($color, .8);
 color: lighten($color, 65%);
 border: 1px solid darken($color, 5%);
 padding: 1em;
 display: block;
 max-width: 200px;
}
.button-decline {
 @extend .button;
 background: red;
}
//compiles to
.button, .button-decline {
 background: rgba(51, 51, 51, 0.8);
 color: #d9d9d9;
 border: 1px solid #262626;
 padding: 1em;
 display: block;
 max-width: 200px;
}
.button-decline {
 background: red;
}



Extend/Inheritance
یکی از موارد که در Sass خیلی مفید است،ارث بری کد ها از یکدیگر است. به صورت که شما یک مجموعه خصوصیات css را در سایر سلکتور های صفحه استفاده می کنید. این کار توسط@extend انجام می شود.این به شما کمک می کند که خیلی ساده یک سری از استایل ها را با یک بار نوشتن در کلاس های دیگر به راحتی استفاده کنید.
برای مثال ما یک سری استایل در کلاس massage نوشته ایم و می خواهیم که کلاس های errors, warning و successes از آن ارث بری داشته باشند:

SCSSSass
SCSS SYNTAX
.message {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  @extend .message;
  border-color: green;
}

.error {
  @extend .message;
  border-color: red;
}

.warning {
  @extend .message;
  border-color: yellow;
}
شما با این کار یک کلاس اصلی ایجاد کرده اید و از آن برای انتقال خوصصیات به سایر کلاس ها استفاده می کنید. شما با این روش از ایجاد کلاس های مختلف و نوشتن چندباره کد ها جلوگیری می کنید.
چیزی که در آخر در فایل css تولید می شود کد زیر است.

.message, .success, .error, .warning {
  border: 1px solid #cccccc;
  padding: 10px;
  color: #333;
}

.success {
  border-color: green;
}

.error {
  border-color: red;
}

.warning {
  border-color: yellow;
}

