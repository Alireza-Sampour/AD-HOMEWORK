4- Mixins
نوشتن بعضی چیزها تو css یکم خسته کنندستfrown مخصوصا با css3 و اونهمه پیشوندهای طولانی و پیچیده که ازش سر درنمیاری! یک میکسین یه گروهی از کدهای css که قراره چندین جا ازشون استفاده کنید رو در خودش نگه می داره و به جای تایپ کردن یکسری کد به صورت مکرر می تونید اون و جایی نگه دارید و فقط یک بار صداش کنید. برای اینکه یه میکسین بسازید باید از کلمه mixin@ استفاده کنید و پس از اون یه نام و یکسری استایل بهش اضافه کنید حتی میتونید به میکسین، پارامتر هم بدین تا انعطاف پذیری بیشتری داشته باشه. ما اینجا یه mixin به اسم box-sizing میسازیم و یکسری پارامتر براش تعریف میکنیم به این صورت:

@mixin box-sizing { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; } 
برای استفاده از mixin باید از کلمه کلیدی include@ استفاده کرد.
//declare mixin(now being passed an argument)
@mixin box-sizing($boxSize) {
  -webkit-box-sizing: $boxSize;
     -moz-box-sizing: $boxSize;
          box-sizing: $boxSize;
}

//use mixin
.mySelector {
    @include box-sizing(border-box);
}


//compiled to:
.mySelector {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}
همان طور که در مثال بالا مشاهده می کنید برای صدا کردن mixin از include@ استفاده کردیم و در ادامه اون اسمی که برای mixin قرار دادیم. می بینید که با استفاده از این روش چقدر زمان کمتری و برای نوشتن کدها صرف می کنیم.





گروه‌بندی کدها (Mixins):
نوشتن دستورات دارای پیشوند در Css3 و تکرار آن‌ها در هر قسمت مورد نیاز کاری زمان‌بر و خسته‌کننده است. تعریف mixinها در SASS به شما اجازه می‌دهد که گروهی از دستورات پرکاربرد را به راحتی در زمان مورد نیاز به کار ببرید. بدیهی است که استفاده از متغیرها در کنار تعریف mixinها، کد را انعطاف‌پذیرتر خواهد کرد.
 


تعریف mixin با دستور mixin@ به همراه اختصاص یک نام به آن و فراخوانی mixin با include@ انجام می‌شود. در مثال بالا، از متغیر radius$ برای افزایش انعطاف‌پذیری کد استفاده شده است. کد Css کامپایل شده به صورت زیر خواهد بود:
 
Mixin

یکی از مزیت‌های استفاده از پیش‌پردازنده وجود قابلیت ساده کردن کدهای پیچیده است. منظورمان دقیقا استفاده کردن از Mixinها است. بری مثال در حالتی که می‌خواهیم از پیشوندهای پشتیبانی مرورگر استفاده کنیم می‌توانیم به سادگی به صورت زیر عمل نماییم:

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

.box { @include border-radius(10px); }
به @mixin در بالای کدها توجه کنید. border-radius نامی است که این mixin ما دارد و در داخل خود یک پارامتر دریافت می‌کند. مقدار متغیر $radius در واقع همان پارامتری است که کاربر وارد می‌کند. 

در نهایت با استفاده از @include می‌توانید mixin‌ نوشته شده را اعمال کنید.

خروجی CSS به صورت زیر خواهد بود:

.box {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}


استفاده از ترکیب کد در Sass
برخی مرورگرها برای اجرای درست یک کد استایل دهی، کد را با یک پیشوند دریافت می کنند. این امر باعث میشود که برای نوشتن Css ناچار باشیم یک خط کد را برای چنیدن مرورگر مختلف به چند صورت تایپ کنیم. 
